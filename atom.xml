<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://deepexpert-caojw.github.io</id>
    <title>小璇窝</title>
    <updated>2021-03-02T02:40:16.360Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://deepexpert-caojw.github.io"/>
    <link rel="self" href="https://deepexpert-caojw.github.io/atom.xml"/>
    <subtitle>璇声不息 朝暮期许</subtitle>
    <logo>https://deepexpert-caojw.github.io/images/avatar.png</logo>
    <icon>https://deepexpert-caojw.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 小璇窝</rights>
    <entry>
        <title type="html"><![CDATA[免Java环境的Javafx桌面程序]]></title>
        <id>https://deepexpert-caojw.github.io/post/mian-java-huan-jing-de-javafx-zhuo-mian-cheng-xu/</id>
        <link href="https://deepexpert-caojw.github.io/post/mian-java-huan-jing-de-javafx-zhuo-mian-cheng-xu/">
        </link>
        <updated>2021-02-27T14:57:12.000Z</updated>
        <content type="html"><![CDATA[<p>近期接到一个需求，就是给公司客服写一个桌面小工具。我之前是会winform wpf等桌面程序的，但是好几年了，不想回顾了，就用Java撸了一个。</p>
<ol>
<li>
<p>项目结构<br>
项目就是一个javafx的项目，MVC架构，用maven进行项目管理。javafx在这里不再多说。重点在于免Java环境</p>
</li>
<li>
<p>正常打成Jar包后，只需要将Jre包复制进客服妹妹的电脑，然后将jar包拷入进同级目录，再写一个bat脚本。<br>
脚本代码如下：<br>
start jre1.8.0_271/bin/java -jar ypidCompare.jar</p>
</li>
<li>
<p>完整的结构如下。双击start.bat即可打开</p>
<figure data-type="image" tabindex="1"><img src="https://deepexpert-caojw.github.io/post-images/1614438212261.png" alt="" loading="lazy"></figure>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[阿里笔试算法题： 写4个线程从依次从1打印到100]]></title>
        <id>https://deepexpert-caojw.github.io/post/a-li-bi-shi-suan-fa-ti-xie-4-ge-xian-cheng-cong-yi-ci-cong-1-da-yin-dao-100/</id>
        <link href="https://deepexpert-caojw.github.io/post/a-li-bi-shi-suan-fa-ti-xie-4-ge-xian-cheng-cong-yi-ci-cong-1-da-yin-dao-100/">
        </link>
        <updated>2020-09-17T16:17:12.000Z</updated>
        <content type="html"><![CDATA[<p>如A--1<br>
B--2<br>
C--3<br>
D--4<br>
A--5<br>
B--6<br>
....<br>
解：<br>
（1）  package com.company;</p>
<p>public class PrintThread implements Runnable {</p>
<pre><code>private String name;
private int pass;
private Sender sender;

public PrintThread(String name,Sender sender,int pass){
    this.name =name;
    this.sender =sender;
    this.pass =pass;
}
@Override
public void run() {

    while(sender.count&lt;100){
        if(sender.getLock(name)){
            if(sender.nextPass ==pass){
                System.out.println(name+&quot;----&quot;+sender.count);
                sender.count=sender.count+1;
                if(pass!=3){
                    sender.nextPass =sender.nextPass+1;
                }else{
                    sender.nextPass=0;
                }
            }
            sender.returnLock(name);
        }
    }
}
</code></pre>
<p>}<br>
（2）package com.company;</p>
<p>public class Sender {</p>
<pre><code>public   volatile   int nextPass =0 ;

public  volatile  int count =0;

public String name;

public volatile boolean lock =true;


public synchronized boolean getLock(String name){
    if(lock){
        this.name =name;
        lock =false;
        return true;
    }else {
        return false;
    }
}

public synchronized void  returnLock(String name){

    if(name.equals(this.name)){
        this.lock =true;
    }

}
</code></pre>
<p>}<br>
（3）package com.company;</p>
<p>import java.nio.ByteBuffer;</p>
<p>public class Main {</p>
<pre><code>public static void main(String[] args) {

    Sender sender =new Sender();
    Thread a =new Thread(new PrintThread(&quot;A&quot;,sender,0));
    Thread b =new Thread(new PrintThread(&quot;B&quot;,sender,1));
    Thread c =new Thread(new PrintThread(&quot;C&quot;,sender,2));
    Thread d =new Thread(new PrintThread(&quot;D&quot;,sender,3));
    a.start();
    b.start();
    c.start();
    d.start();
}
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【SpringBoot】记录一次高并发调优经历]]></title>
        <id>https://deepexpert-caojw.github.io/post/springboot-ji-lu-yi-ci-gao-bing-fa-diao-you-jing-li/</id>
        <link href="https://deepexpert-caojw.github.io/post/springboot-ji-lu-yi-ci-gao-bing-fa-diao-you-jing-li/">
        </link>
        <updated>2020-09-03T02:43:59.000Z</updated>
        <content type="html"><![CDATA[<p>本公司是一家游戏公司，需要做一点埋点统计系统。因为客户端涉及到IOS,Android,小程序，实现的方式太多，所以想采取比较简单通用的API方法。<br>
项目逻辑很简单，就是客户端发送游戏的APP信息给服务端，启动信息，心跳信息，事件信息，用来记录活跃，时长，事件。每次客户端启动生成一个uuid作为启动ID,最后根据启动ID整合出新增活跃留存事件等数据。<br>
系统的实现也不复杂，客户端请求接口，将信息发送给服务端。服务端将数据先缓存进内存里，每种信息放入一个同步队列，ConcurrentLinkedQueue。 再起一个定时任务，每2秒开10个线程，每个线程取2000条数据批量插入mongodb。凌晨再将昨天的数据从MongoDB里取出来，分析完成后存入MySQL中。数据的具体结构和分析就不再多述。<br>
一开始只在一个游戏做测试，压力不大。后来所有游戏都接入了，服务器压力立刻上来了。主要原因是接口哦请求太多了，cpu负载太大。原生的SpringBoot使用的是tomcat作为容器，然后我就换成了undertow作为容器。Untertow是基于Nio的，换上之后，cpu负载少了一半，但是内存消耗变大了，最关键是，Undertow运行一段时间就无法找接受到接口。于是试着调参数，仍然不行。试着调JVM参数，提高堆的大小，仍然不行。不得已又换成了tomcat。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Redis】Redis  3.2.12  集群搭建 cluster方式]]></title>
        <id>https://deepexpert-caojw.github.io/post/redis-3212-ji-qun-da-jian-cluster-fang-shi/</id>
        <link href="https://deepexpert-caojw.github.io/post/redis-3212-ji-qun-da-jian-cluster-fang-shi/">
        </link>
        <updated>2020-08-13T02:28:16.000Z</updated>
        <content type="html"><![CDATA[<p>1 .  在Linux上新建目录/u01</p>
<ol start="2">
<li>
<p>解压并安装Redis<br>
tar -zxvf ./redis-3.2.12.tar.gz<br>
cd /u01/redis-3.2.12<br>
make &amp; make install</p>
</li>
<li>
<p>新建目录/u01/redis_cluster<br>
mkdir -p /u01/redis_cluster</p>
</li>
</ol>
<p>4.新建六个Redis文件目录<br>
mkdir -p /u01/redis_cluster/7001<br>
mkdir -p /u01/redis_cluster/7002<br>
mkdir -p /u01/redis_cluster/7003<br>
mkdir -p /u01/redis_cluster/7004<br>
mkdir -p /u01/redis_cluster/7005<br>
mkdir -p /u01/redis_cluster/7006</p>
<p>5.复制Redis运行文件到六个目录中<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7001<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7002<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7003<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7004<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7005<br>
cp -rf /u01/redis-3.2.12/* /u01/redis_cluster/7006</p>
<p>6.在六个目录中分别创建data目录，存放数据<br>
mkdir -p /u01/redis_cluster/7001/data<br>
mkdir -p /u01/redis_cluster/7002/data<br>
mkdir -p /u01/redis_cluster/7003/data<br>
mkdir -p /u01/redis_cluster/7004/data<br>
mkdir -p /u01/redis_cluster/7005/data<br>
mkdir -p /u01/redis_cluster/7006/data</p>
<p>7.复制执行文件到指定目录<br>
mkdir -p /u01/redis_cluster/bin<br>
cd /u01/redis-3.2.12/src<br>
cp ./mkreleasehdr.sh redis-benchmark redis-check-aof redis-cli redis-server redis-trib.rb /u01/redis_cluster/bin</p>
<p>8.在六个目录(/u01/redis_cluster/7001,7002,7003,7004,7005,7006)下分别创建配置文件redis.conf<br>
port 7001<br>
daemonize yes<br>
bind 192.168.25.100<br>
dir /u01/redis_cluster/7001/data/<br>
pidfile /var/run/redis_7001.pid<br>
cluster-enabled yes<br>
cluster-config-file nodes7001.conf<br>
cluster-node-timeout 15000<br>
appendonly yes</p>
<p>每个目录下的配置文件端口号和文件目都不相同</p>
<p>9.启动各Redis实例<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7001/redis.conf<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7002/redis.conf<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7003/redis.conf<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7004/redis.conf<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7005/redis.conf<br>
/u01/redis_cluster/bin/redis-server /u01/redis_cluster/7006/redis.conf</p>
<ol start="10">
<li>查看本机Ruby版本 如果低于2.2.2 则需要升级Ruby<br>
推荐使用rvm升级，注意 RubyChina的镜像地址换了,网上的教程都不对，需要去官网查询，升级完之后还需要配置电脑默认Ruby版本<br>
11.升级所需软件<br>
yum install ruby yum install rubygems gem install redis</li>
</ol>
<p>12.建立群集<br>
/u01/redis_cluster/bin/redis-trib.rb create –replicas 1<br>
192.168.25.100:7001 192.168.25.100:7002 192.168.25.100:7003<br>
192.168.25.100:7004 192.168.25.100:7005<br>
192.168.25.100:7006</p>
<ol start="13">
<li>cluster nodes命令 ，可以看到， 一共6个节点集群的主从自动分配好了 ，三主三从，如果关掉主节点 从节点会顶替主节点。每一条数据会根据key的hash分配到唯一主节点里，从节点会同步。当查询这个key，也只会去唯一的节点里去查询。<br>
<img src="https://deepexpert-caojw.github.io/post-images/1599100742351.png" alt="" loading="lazy"></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【SpringCloud】记eureka client注册时候的一个坑: 服务已经注册成功但是无法连接]]></title>
        <id>https://deepexpert-caojw.github.io/post/springcloud-ji-eureka-client-zhu-ce-shi-hou-de-yi-ge-keng-fu-wu-yi-jing-zhu-ce-cheng-gong-dan-shi-wu-fa-lian-jie/</id>
        <link href="https://deepexpert-caojw.github.io/post/springcloud-ji-eureka-client-zhu-ce-shi-hou-de-yi-ge-keng-fu-wu-yi-jing-zhu-ce-cheng-gong-dan-shi-wu-fa-lian-jie/">
        </link>
        <updated>2019-02-19T08:31:16.000Z</updated>
        <content type="html"><![CDATA[<p>SpringCloud向eureka服务注册中心时候，如果不指定IP，设定的IP地址可能是局域网IP，如果client之间网段不通，会无法进行通信。</p>
<p>SpringCloud注册时候使用指定的IP注册：</p>
<p>eureka:<br>
instance:<br>
prefer-ip-address: true<br>
ip-address: 10.33.133.133</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【JAVA】记录一次详细的java利用freemarker生成word模板和坑]]></title>
        <id>https://deepexpert-caojw.github.io/post/ji-lu-yi-ci-xiang-xi-de-java-li-yong-freemarker-sheng-cheng-word-mo-ban-he-keng/</id>
        <link href="https://deepexpert-caojw.github.io/post/ji-lu-yi-ci-xiang-xi-de-java-li-yong-freemarker-sheng-cheng-word-mo-ban-he-keng/">
        </link>
        <updated>2018-11-23T02:21:04.000Z</updated>
        <content type="html"><![CDATA[<p>需求描述: 根据公司纪律小组的电子违规记录，生成word综合分析文档。形式如：</p>
<p>1 . 上班时间打游戏</p>
<p>（1）XXX在XXX时间打游戏</p>
<p>图片</p>
<p>（2）XXXX在上班时间刷微博</p>
<p>图片</p>
<p>2.迟到</p>
<p>（1）XXX迟到</p>
<p>图片</p>
<p>....</p>
<pre><code> 所用技术：freemaker ;系统环境： cent os
</code></pre>
<p>制作模板的步骤别的博客里基本都有，和把map写进模板的代码大同小异，我也是抄别的博客里的。</p>
<p>我就说说遇到的坑和解决方法吧</p>
<p>1 . 想要准确的复制成功 一定要复制一个&lt;w:p&gt;... &lt;/w:p&gt;标签，这表示一个段落，里面带格式和内容</p>
<p>2 .  最后模板生成时，我用的是xml 2003格式的，因为里面要图片，我看普通的xml格式里图片，是把图片存在一个统一地方，需要的地方是个引用。时间紧迫，我就用2003的，图片转为base64直接存在字段里。</p>
<p>3.生成结果： 最后生成文件时，保存的格式是xml格式，直接改后缀会打不开。我找了一个下午加晚上没找到好的解决方法，时间紧任务多，只能先搁置着。pageoffice打开xml格式的文件没问题。因为服务器是Linux,有个jacob包不能用。我现在解决方法就是加一行提示，请下载之后打开方式用word打开，并且另存为word格式。</p>
<p>4 . freemaker循环对象</p>
<p>这个放心 正常循环，支持对象里的对象再一次循环。</p>
<p>附 ：实体类和模板文件关键部分 关键部分加粗</p>
<p>@Data<br>
@Accessors( chain = true)<br>
public class ReportDataModel {<br>
String retitle;<br>
List<ReportItem>  items;<br>
}</p>
<p>@Data<br>
public class ReportItem {<br>
String itemdata;<br>
String itempic;<br>
}</p>
<p>report.ftl :</p>
<p>&lt;#list recordData as record&gt;&lt;w:p wsp:rsidR=&quot;001E6155&quot; wsp:rsidRDefault=&quot;001E6155&quot; wsp:rsidP=&quot;002E6BEF&quot;&gt;&lt;w:pPr&gt;&lt;w:overflowPunct w:val=&quot;off&quot;/&gt;&lt;w:spacing w:line=&quot;560&quot; w:line-rule=&quot;exact&quot;/&gt;&lt;w:ind w:first-line-chars=&quot;200&quot; w:first-line=&quot;640&quot;/&gt;&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;楷体&quot; w:fareast=&quot;楷体&quot; w:h-ansi=&quot;楷体&quot; w:cs=&quot;方正仿宋_GBK&quot; w:hint=&quot;fareast&quot;/&gt;&lt;wx:font wx:val=&quot;楷体&quot;/&gt;&lt;w:sz w:val=&quot;32&quot;/&gt;&lt;w:sz-cs w:val=&quot;32&quot;/&gt;&lt;/w:rPr&gt;&lt;/w:pPr&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;楷体&quot; w:fareast=&quot;楷体&quot; w:h-ansi=&quot;楷体&quot; w:cs=&quot;方正仿宋_GBK&quot; w:hint=&quot;fareast&quot;/&gt;&lt;wx:font wx:val=&quot;楷体&quot;/&gt;&lt;w:sz w:val=&quot;32&quot;/&gt;&lt;w:sz-cs w:val=&quot;32&quot;/&gt;&lt;/w:rPr&gt;&lt;w:t&gt;<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 36: …t&gt;&lt;/w:r&gt;&lt;/w:p&gt;&lt;#̲list record.ite…'>{record.retitle}&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;&lt;#list record.items as item&gt;&lt;w:p wsp:rsidR=&quot;002C503E&quot; wsp:rsidRDefault=&quot;001E6155&quot; wsp:rsidP=&quot;002C503E&quot;&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;方正仿宋_GBK&quot; w:fareast=&quot;方正仿宋_GBK&quot; w:hint=&quot;fareast&quot;/&gt;&lt;wx:font wx:val=&quot;方正仿宋_GBK&quot;/&gt;&lt;w:sz w:val=&quot;32&quot;/&gt;&lt;w:sz-cs w:val=&quot;32&quot;/&gt;&lt;/w:rPr&gt;&lt;w:tab/&gt;&lt;/w:r&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;方正仿宋_GBK&quot; w:fareast=&quot;方正仿宋_GBK&quot; w:hint=&quot;fareast&quot;/&gt;&lt;wx:font wx:val=&quot;方正仿宋_GBK&quot;/&gt;&lt;w:sz w:val=&quot;32&quot;/&gt;&lt;w:sz-cs w:val=&quot;32&quot;/&gt;&lt;/w:rPr&gt;&lt;w:tab/&gt;&lt;/w:r&gt;&lt;w:proofErr w:type=&quot;spellStart&quot;/&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;w:rFonts w:ascii=&quot;方正仿宋_GBK&quot; w:fareast=&quot;方正仿宋_GBK&quot; w:hint=&quot;fareast&quot;/&gt;&lt;wx:font wx:val=&quot;方正仿宋_GBK&quot;/&gt;&lt;w:sz w:val=&quot;32&quot;/&gt;&lt;w:sz-cs w:val=&quot;32&quot;/&gt;&lt;/w:rPr&gt;&lt;w:t&gt;</span>{item.itemdata}&lt;/w:t&gt;&lt;/w:r&gt;&lt;w:proofErr w:type=&quot;spellEnd&quot;/&gt;&lt;/w:p&gt;&lt;w:p wsp:rsidR=&quot;002C503E&quot; wsp:rsidRDefault=&quot;0061702B&quot; wsp:rsidP=&quot;002C503E&quot;&gt;&lt;w:r&gt;&lt;w:rPr&gt;&lt;w:noProof/&gt;&lt;/w:rPr&gt;&lt;w:pict&gt;&lt;v:shapetype id=&quot;_x0000_t75&quot; coordsize=&quot;21600,21600&quot; o:spt=&quot;75&quot; o:preferrelative=&quot;t&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;v:stroke joinstyle=&quot;miter&quot;/&gt;&lt;v:formulas&gt;&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;v:f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;v:f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;v:f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;v:f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;v:f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;v:f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;v:f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/v:formulas&gt;&lt;v:path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;/&gt;&lt;o:lock v:ext=&quot;edit&quot; aspectratio=&quot;t&quot;/&gt;&lt;/v:shapetype&gt;&lt;w:binData w:name=&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">&quot;</mi><mi>w</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>m</mi><mi>l</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>0300000</mn><mi mathvariant="normal">&quot;</mi><mo>+</mo><mi>i</mi><mi>t</mi><mi>e</mi><msub><mi>m</mi><mi>i</mi></msub><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>+</mo><mn>1</mn><mo>+</mo><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>p</mi><mi>g</mi><mi mathvariant="normal">&quot;</mi></mrow><mi mathvariant="normal">&quot;</mi><mi>x</mi><mi>m</mi><mi>l</mi><mo>:</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>e</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>v</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">{&quot;wordml://0300000&quot;+item_index+1+&quot;.jpg&quot;}&quot; xml:space=&quot;preserve&quot;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">d</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord">0</span><span class="mord">3</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">&quot;</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord">&quot;</span></span><span class="mord">&quot;</span><span class="mord mathdefault">x</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>{item.itempic}</p>
<p>&lt;/w:binData&gt;&lt;v:shape id=&quot;_x56fe__x7247__x0020_1&quot; o:spid=&quot;_x0000_i1025&quot; type=&quot;#_x0000_t75&quot; alt=&quot;大厅【音】_20190111135230431&quot; style=&quot;width:441.8pt;height:248.75pt;visibility:visible;mso-wrap-style:square&quot;&gt;&lt;v:imagedata src=&quot;${&quot;wordml://0300000&quot;+item_index+1+&quot;.jpg&quot;}&quot; o:title=&quot;大厅【音】_20190111135230431&quot;/&gt;&lt;/v:shape&gt;&lt;/w:pict&gt;&lt;/w:r&gt;&lt;/w:p&gt;</p>
<p>&lt;/#list&gt;</p>
<p>&lt;/#list&gt;</p>
]]></content>
    </entry>
</feed>